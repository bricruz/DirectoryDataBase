
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B_Cru
 */
public class AddressScreen extends javax.swing.JDialog
{

    AddressOptions options = new AddressOptions(); 
   
    DefaultTableModel model;
    public AddressScreen(java.awt.Frame parent, boolean modal)
    {
       
        super(parent, modal);
        initComponents();
        model= (DefaultTableModel)jTable1.getModel();
        Show_Address_In_JTable();
        setIcon();
    }
    public Connection getConnection()
    {
        Connection con;
        try{
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/addressbook","uta","admin");
            return con;
        } catch (Exception e){
            e.printStackTrace();
            return null;
        }
               
    }
        public ArrayList<Address> getAddressList(){
        ArrayList<Address> addressList = new ArrayList<Address>();
        Connection connection = getConnection();
        String query = "SELECT * FROM Addresses ";
        Statement st;
        ResultSet rs;
        
        try{
            st = connection.createStatement();
            rs = st.executeQuery(query);
            Address address;
            while(rs.next())
            {
                address = new Address(rs.getInt("addressID"),rs.getString("firstName"), rs.getString("lastName"),rs.getString("email"), rs.getString("phoneNumber")); 
                addressList.add(address);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return addressList;
    }
        public void Show_Address_In_JTable()
    {
        ArrayList<Address> list = getAddressList();
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        Object[] row = new Object[5];
        for(int i = 0; i <list.size(); i++)
        {
            row[0] = list.get(i).getAddressID();
            row[1] = list.get(i).getFirstName();
            row[2] = list.get(i).getLastName();
            row[3] = list.get(i).getEmail();
            row[4] = list.get(i).getPhoneNumber();
            
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel5 = new javax.swing.JLabel();
        fNameField = new java.awt.TextField();
        lNameField = new java.awt.TextField();
        messageLabel = new javax.swing.JLabel();
        emailField = new java.awt.TextField();
        jLabel1 = new javax.swing.JLabel();
        phoneField = new java.awt.TextField();
        UpdateButton = new java.awt.Button();
        AddButton = new java.awt.Button();
        DeleteButton = new java.awt.Button();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        DeleteAllButton = new java.awt.Button();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel5.setText("Phone Number:");

        fNameField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fNameFieldActionPerformed(evt);
            }
        });

        lNameField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                lNameFieldActionPerformed(evt);
            }
        });

        messageLabel.setForeground(new java.awt.Color(255, 51, 51));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Address Book");

        UpdateButton.setLabel("Update Address");
        UpdateButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                UpdateButtonActionPerformed(evt);
            }
        });

        AddButton.setLabel("Add Address");
        AddButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                AddButtonActionPerformed(evt);
            }
        });

        DeleteButton.setLabel("Delete Address");
        DeleteButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                DeleteButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("First Name:");

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Address ID", "First Name", "Last Name", "E-Mail", "Phone Number"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 846, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                .addContainerGap())
        );

        DeleteAllButton.setLabel("Delete All");
        DeleteAllButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                DeleteAllButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Last Name:");

        jLabel4.setText("E-mail:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(24, 24, 24)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(messageLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(UpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(DeleteAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(DeleteButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(fNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lNameField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emailField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(DeleteAllButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(messageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fNameFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fNameFieldActionPerformed
    {//GEN-HEADEREND:event_fNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fNameFieldActionPerformed

    private void lNameFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_lNameFieldActionPerformed
    {//GEN-HEADEREND:event_lNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lNameFieldActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_UpdateButtonActionPerformed
    {//GEN-HEADEREND:event_UpdateButtonActionPerformed

        {
                
        String firstname= fNameField.getText();

        String lastname= lNameField.getText();

        String email= emailField.getText();

        String phonenumber= phoneField.getText();

        int selectedrow= jTable1.getSelectedRow();

        if (selectedrow==-1) {if (model.getRowCount() ==0) {

            messageLabel.setText("table is blank");
    }
        else {
        messageLabel.setText("please select a row to update");
    }
        }
        else {
            int id= (int) model.getValueAt(selectedrow, 0);

            options.updateAddress(id, firstname, lastname, email, phonenumber);

            viewAddresses();

            messageLabel.setText("address is updated");
            
            fNameField.setText("");
            lNameField.setText("");
            emailField.setText("");
            phoneField.setText("");

    }
    }
    }
    
    
        public void viewAddresses()
        {

            model.setRowCount(0);

            ArrayList<Address> addresses= new ArrayList<Address>();

            addresses= options.viewAddresses();

            if(addresses!= null)
            {

                for(Address address: addresses)
                {
                    Object [] addAddress= {address.getAddressID(), address.getFirstName(),

                        address.getLastName(), address.getEmail(), address.getPhoneNumber()};

                    model.addRow(addAddress);}

            }

    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_AddButtonActionPerformed
    {//GEN-HEADEREND:event_AddButtonActionPerformed
        messageLabel.setText("");

        String firstname= fNameField.getText();

        String lastname= lNameField.getText();

        String email= emailField.getText();

        String phonenumber = phoneField.getText();

        if(fNameField.getText().isEmpty()|lNameField.getText().isEmpty()|emailField.getText().isEmpty()|phoneField.getText().isEmpty())
        {
            messageLabel.setText("all fields must be filled");
        }
        else
        {

            options.addAddress(firstname, lastname, email, phonenumber);
            viewAddresses();
            
            messageLabel.setText("addresses have been added");
            
            fNameField.setText("");
            lNameField.setText("");
            emailField.setText("");
            phoneField.setText("");
            
        }
    }//GEN-LAST:event_AddButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_DeleteButtonActionPerformed
    {//GEN-HEADEREND:event_DeleteButtonActionPerformed
        messageLabel.setText("");

        int selectedRow= jTable1.getSelectedRow();

        if (selectedRow == -1)
        {
            if (model.getRowCount() ==0)
            {
                messageLabel.setText("table is blank");

            }
            else
            {

                messageLabel.setText("select an address to delete");

            }

        }

        else
        {
            int id= (int) model.getValueAt(selectedRow, 0);
            
            //int id= selectedRow;
            
            System.out.print(id);
            
            options.deleteAddress(id);
            viewAddresses();
            
            fNameField.setText("");
            lNameField.setText("");
            emailField.setText("");
            phoneField.setText("");
            
            messageLabel.setText("Address is deleted");

        }        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTable1MouseClicked
    {//GEN-HEADEREND:event_jTable1MouseClicked
        //Display Selected Row In JTextFields
        int selectedrow = jTable1.getSelectedRow();
        TableModel model = jTable1.getModel();

        fNameField.setText(model.getValueAt(selectedrow,1).toString());
        lNameField.setText(model.getValueAt(selectedrow,2).toString());
        emailField.setText(model.getValueAt(selectedrow,3).toString());
        phoneField.setText(model.getValueAt(selectedrow,4).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void DeleteAllButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_DeleteAllButtonActionPerformed
    {//GEN-HEADEREND:event_DeleteAllButtonActionPerformed
     
     if(jTable1.getRowCount()==0){
         messageLabel.setText("Table is already blank my friend");
     }   
     else{
     options.deleteAllAddresses();
      
     fNameField.setText("");
     lNameField.setText("");
     emailField.setText("");
     phoneField.setText("");
     viewAddresses();
     
     messageLabel.setText("Toodleloo! All addresses have vanished");
     }
    }//GEN-LAST:event_DeleteAllButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(AddressScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(AddressScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(AddressScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(AddressScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                AddressScreen dialog = new AddressScreen(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e)
                    {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button AddButton;
    private java.awt.Button DeleteAllButton;
    private java.awt.Button DeleteButton;
    private java.awt.Button UpdateButton;
    private java.awt.TextField emailField;
    private java.awt.TextField fNameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.awt.TextField lNameField;
    private javax.swing.JLabel messageLabel;
    private java.awt.TextField phoneField;
    // End of variables declaration//GEN-END:variables

    private void setIcon()
    {
       setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("addressicon.png")));
    }
}
